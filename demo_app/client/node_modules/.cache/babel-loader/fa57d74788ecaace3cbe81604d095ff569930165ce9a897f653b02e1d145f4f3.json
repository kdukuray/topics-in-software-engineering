{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/ledger_pay/demo_app/client/src/pages/Invoice.js\",\n  _s = $RefreshSig$();\nimport { Transaction, Connection, PublicKey, clusterApiUrl, SystemProgram } from '@solana/web3.js';\nimport { useState } from 'react';\nimport { Buffer } from 'buffer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Invoice() {\n  _s();\n  const queryParams = new URLSearchParams(window.location.search);\n  const [connectionStatus, setConnectionStatus] = useState();\n  const [userPublicKey, setUserPublicKey] = useState(false);\n  const [items, setItems] = useState(queryParams.get(\"items\"));\n  const [prices, setPrices] = useState(queryParams.get(\"prices\"));\n  const [counts, setCounts] = useState(queryParams.get(\"counts\"));\n  // const [tax, setTax] = useState(Number(queryParams.get(\"tax\")));\n  const [paymentType, setPaymentType] = useState(\"One Time Payment\");\n  window.Buffer = Buffer;\n  const wallet = window.solana;\n  async function initiateWalletConnection() {\n    if (wallet !== null && wallet !== void 0 && wallet.isPhantom) {\n      await wallet.connect();\n      setConnectionStatus(true);\n      setUserPublicKey(wallet.publicKey.toBase58());\n    }\n  }\n  async function makeAndSendTransation() {\n    const blockchainConnection = new Connection(clusterApiUrl(\"devnet\"), \"confirmed\");\n    await wallet.connect();\n    try {\n      const fromPubkey = new PublicKey(wallet.publicKey);\n      const toPubkey = new PublicKey(\"5hM386Bx7DeyWTP3VvePE5TAYTxMU4s9jvSWQcPbhuE7\");\n\n      // Convert price from SOL to lamports (1 SOL = 1_000_000_000 lamports)\n      const lamports = price * 1000000000;\n      let transaction = new Transaction().add(SystemProgram.transfer({\n        fromPubkey,\n        toPubkey,\n        lamports\n      }));\n\n      // items=_#_[name, price,count]_#_\n\n      transaction.feePayer = fromPubkey;\n      transaction.recentBlockhash = (await blockchainConnection.getLatestBlockhash()).blockhash;\n      const signedTransaction = await wallet.signTransaction(transaction);\n      const txid = await blockchainConnection.sendRawTransaction(signedTransaction.serialize());\n      await blockchainConnection.confirmTransaction(txid, \"confirmed\");\n      alert(`Transaction successful! \\nTransaction ID:\\n${txid}`);\n      console.log(\"Transaction ID:\", txid);\n    } catch (error) {\n      console.error(\"Transaction failed:\", error);\n      alert(\"Transaction failed. See console for details.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-heading\",\n        children: \"Connect Phantom Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-subtext\",\n        children: \"To make payments, first connect to your Phantom Wallet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status\",\n        children: [\"Connection status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: connectionStatus ? \"Successful\" : \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), connectionStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"wallet-address\",\n        children: [\"Connected to wallet: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: wallet.publicKey.toBase58()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initiateWalletConnection,\n        className: \"btn btn-green\",\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-heading\",\n        children: \"Transaction Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Item:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 14\n          }, this), \" \", items]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 14\n          }, this), \" \", prices, \" SOL\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tax:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 14\n          }, this), \" \", tax]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Payment Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 14\n          }, this), \" \", paymentType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: makeAndSendTransation,\n        className: \"btn btn-purple\",\n        children: \"Make Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Invoice, \"zmwa1AVNBmmWUdf2Y0UF6LP7qKo=\");\n_c = Invoice;\nexport default Invoice;\nvar _c;\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"names":["Transaction","Connection","PublicKey","clusterApiUrl","SystemProgram","useState","Buffer","jsxDEV","_jsxDEV","Invoice","_s","queryParams","URLSearchParams","window","location","search","connectionStatus","setConnectionStatus","userPublicKey","setUserPublicKey","items","setItems","get","prices","setPrices","counts","setCounts","paymentType","setPaymentType","wallet","solana","initiateWalletConnection","isPhantom","connect","publicKey","toBase58","makeAndSendTransation","blockchainConnection","fromPubkey","toPubkey","lamports","price","transaction","add","transfer","feePayer","recentBlockhash","getLatestBlockhash","blockhash","signedTransaction","signTransaction","txid","sendRawTransaction","serialize","confirmTransaction","alert","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","tax","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/ledger_pay/demo_app/client/src/pages/Invoice.js"],"sourcesContent":["\nimport { Transaction, Connection, PublicKey, clusterApiUrl,  SystemProgram } from '@solana/web3.js';\nimport { useState } from 'react';\nimport { Buffer } from 'buffer';\n\n\nfunction Invoice() {\n  const queryParams = new URLSearchParams(window.location.search);\n\n  const [connectionStatus, setConnectionStatus] = useState();\n  const [userPublicKey, setUserPublicKey] = useState(false);\n  const [items, setItems] = useState(queryParams.get(\"items\"));\n  const [prices, setPrices] = useState(queryParams.get(\"prices\"));\n  const [counts, setCounts] = useState(queryParams.get(\"counts\"))\n  // const [tax, setTax] = useState(Number(queryParams.get(\"tax\")));\n  const [paymentType, setPaymentType] = useState(\"One Time Payment\");\n\n  window.Buffer = Buffer;\n  const wallet = window.solana;\n\n  async function initiateWalletConnection() {\n    if (wallet?.isPhantom) {\n      await wallet.connect();\n      setConnectionStatus(true);\n      setUserPublicKey(wallet.publicKey.toBase58());\n    }\n  }\n\n  async function makeAndSendTransation() {\n    const blockchainConnection = new Connection(clusterApiUrl(\"devnet\"), \"confirmed\");\n    await wallet.connect();\n\n    try {\n      const fromPubkey = new PublicKey(wallet.publicKey);\n      const toPubkey = new PublicKey(\"5hM386Bx7DeyWTP3VvePE5TAYTxMU4s9jvSWQcPbhuE7\");\n\n      // Convert price from SOL to lamports (1 SOL = 1_000_000_000 lamports)\n      const lamports = price * 1_000_000_000;\n\n      let transaction = new Transaction().add(\n        SystemProgram.transfer({\n          fromPubkey,\n          toPubkey,\n          lamports,\n        })\n      );\n\n      // items=_#_[name, price,count]_#_\n\n      transaction.feePayer = fromPubkey;\n      transaction.recentBlockhash = (await blockchainConnection.getLatestBlockhash()).blockhash;\n\n      const signedTransaction = await wallet.signTransaction(transaction);\n      const txid = await blockchainConnection.sendRawTransaction(signedTransaction.serialize());\n      await blockchainConnection.confirmTransaction(txid, \"confirmed\");\n\n      alert(`Transaction successful! \\nTransaction ID:\\n${txid}`);\n      console.log(\"Transaction ID:\", txid);\n    } catch (error) {\n      console.error(\"Transaction failed:\", error);\n      alert(\"Transaction failed. See console for details.\");\n    }\n  }\n\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"card\">\n        <h2 className=\"card-heading\">Connect Phantom Wallet</h2>\n        <p className=\"card-subtext\">To make payments, first connect to your Phantom Wallet.</p>\n        <p className=\"status\">Connection status: <strong>{connectionStatus ? \"Successful\" : \"Pending\"}</strong></p>\n        {connectionStatus && (\n          <p className=\"wallet-address\">\n            Connected to wallet: <br />\n            <strong>{wallet.publicKey.toBase58()}</strong>\n          </p>\n        )}\n        <button onClick={initiateWalletConnection} className=\"btn btn-green\">Connect Wallet</button>\n      </div>\n\n      <div className=\"card\">\n        <h2 className=\"card-heading\">Transaction Details</h2>\n        <div className=\"transaction-details\">\n          <p><strong>Item:</strong> {items}</p>\n          <p><strong>Price:</strong> {prices} SOL</p>\n          <p><strong>Tax:</strong> {tax}</p>\n          <p><strong>Payment Type:</strong> {paymentType}</p>\n        </div>\n        <button onClick={makeAndSendTransation} className=\"btn btn-purple\">Make Transaction</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Invoice;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}