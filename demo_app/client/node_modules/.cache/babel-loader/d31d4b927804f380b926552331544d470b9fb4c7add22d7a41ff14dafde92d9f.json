{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/ledger_pay/demo_app/client/src/pages/checkout.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Checkout = () => {\n  const [paymentMethod, setPaymentMethod] = useState('');\n  const [paymentLink, setPaymentLink] = useState('');\n\n  const handlePayment = async () => {\n    if (paymentMethod === 'ledgerpay') {\n      try {\n        // Example request to create a LedgerPay invoice\n        const response = await axios.post('http://localhost:5000/api/create-invoice', {\n          amount: 1500, // Example amount (adjust based on cart total)\n          currency: 'USD', // Example currency\n        });\n\n        setPaymentLink(response.data.paymentLink); // Return payment link from backend\n      } catch (error) {\n        console.error('Error creating invoice with LedgerPay:', error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>Checkout</h1>\n      <div>\n        <button onClick={() => setPaymentMethod('ledgerpay')}>Pay with LedgerPay</button>\n        <button onClick={() => setPaymentMethod('paypal')}>Pay with PayPal</button>\n      </div>\n\n      {paymentMethod === 'ledgerpay' && (\n        <div>\n          <button onClick={handlePayment}>Generate LedgerPay Invoice</button>\n        </div>\n      )}\n\n      {paymentLink && (\n        <div>\n          <h3>Payment Link</h3>\n          <a href={paymentLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            Click to Pay with LedgerPay\n          </a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Checkout;\n*/\nimport React from 'react';\nimport { useLocation } from 'react-router-dom'; // To access passed state\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const cart = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.cart) || []; // Getting cart from state or defaulting to an empty array\n  console.log(cart);\n  const [paymentMethod, setPaymentMethod] = React.useState('');\n  const [paymentLink, setPaymentLink] = React.useState('');\n  function getInvoiceUrl() {\n    const itemMap = {};\n\n    // Aggregate duplicates\n    cart.forEach(item => {\n      const name = item.name;\n      const price = item.price;\n      const count = item.count || 1;\n      if (itemMap[name]) {\n        itemMap[name].count += count;\n      } else {\n        itemMap[name] = {\n          price,\n          count\n        };\n      }\n    });\n    const items = Object.keys(itemMap).join(' ');\n    const prices = Object.values(itemMap).map(i => i.price).join(' ');\n    const counts = Object.values(itemMap).map(i => i.count).join(' ');\n    const url = `http://localhost:3000/invoice/?items=${encodeURIComponent(items)}&prices=${encodeURIComponent(prices)}&counts=${encodeURIComponent(counts)}&paymenttoken{}`;\n    return url;\n  }\n  const handlePayment = async () => {\n    if (paymentMethod === 'ledgerpay') {\n      try {\n        const response = await axios.post('http://localhost:5000/api/create-invoice', {\n          amount: cart.reduce((total, product) => total + product.price, 0),\n          // Total price of the cart\n          currency: 'USD'\n        });\n        setPaymentLink(response.data.paymentLink);\n      } catch (error) {\n        console.error('Error creating invoice with LedgerPay:', error);\n      }\n    }\n  };\n  function goToInvoice() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cart.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - $\", product.price]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total: $\", cart.reduce((total, product) => total + product.price, 0)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = getInvoiceUrl(),\n        children: \"Pay with LedgerPay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPaymentMethod('paypal'),\n        children: \"Pay with PayPal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), paymentMethod === 'ledgerpay' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePayment,\n        children: \"Generate LedgerPay Invoice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), paymentLink && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Payment Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: paymentLink,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Click to Pay with LedgerPay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"I0uBayBq9Hg+7lShqASzxMm1auw=\", false, function () {\n  return [useLocation];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","useLocation","axios","jsxDEV","_jsxDEV","Checkout","_s","_location$state","location","cart","state","console","log","paymentMethod","setPaymentMethod","useState","paymentLink","setPaymentLink","getInvoiceUrl","itemMap","forEach","item","name","price","count","items","Object","keys","join","prices","values","map","i","counts","url","encodeURIComponent","handlePayment","response","post","amount","reduce","total","product","currency","data","error","goToInvoice","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","window","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/ledger_pay/demo_app/client/src/pages/checkout.js"],"sourcesContent":["/*import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Checkout = () => {\n  const [paymentMethod, setPaymentMethod] = useState('');\n  const [paymentLink, setPaymentLink] = useState('');\n\n  const handlePayment = async () => {\n    if (paymentMethod === 'ledgerpay') {\n      try {\n        // Example request to create a LedgerPay invoice\n        const response = await axios.post('http://localhost:5000/api/create-invoice', {\n          amount: 1500, // Example amount (adjust based on cart total)\n          currency: 'USD', // Example currency\n        });\n\n        setPaymentLink(response.data.paymentLink); // Return payment link from backend\n      } catch (error) {\n        console.error('Error creating invoice with LedgerPay:', error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>Checkout</h1>\n      <div>\n        <button onClick={() => setPaymentMethod('ledgerpay')}>Pay with LedgerPay</button>\n        <button onClick={() => setPaymentMethod('paypal')}>Pay with PayPal</button>\n      </div>\n\n      {paymentMethod === 'ledgerpay' && (\n        <div>\n          <button onClick={handlePayment}>Generate LedgerPay Invoice</button>\n        </div>\n      )}\n\n      {paymentLink && (\n        <div>\n          <h3>Payment Link</h3>\n          <a href={paymentLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            Click to Pay with LedgerPay\n          </a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Checkout;\n*/\nimport React from 'react';\nimport { useLocation } from 'react-router-dom'; // To access passed state\nimport axios from 'axios';\n\nconst Checkout = () => {\n  const location = useLocation();\n  const cart = location.state?.cart || [];  // Getting cart from state or defaulting to an empty array\n  console.log(cart)\n  const [paymentMethod, setPaymentMethod] = React.useState('');\n  const [paymentLink, setPaymentLink] = React.useState('');\n\n\n  function getInvoiceUrl() {\n    const itemMap = {};\n  \n    // Aggregate duplicates\n    cart.forEach(item => {\n      const name = item.name;\n      const price = item.price;\n      const count = item.count || 1;\n  \n      if (itemMap[name]) {\n        itemMap[name].count += count;\n      } else {\n        itemMap[name] = { price, count };\n      }\n    });\n  \n    const items = Object.keys(itemMap).join(' ');\n    const prices = Object.values(itemMap).map(i => i.price).join(' ');\n    const counts = Object.values(itemMap).map(i => i.count).join(' ');\n  \n    const url = `http://localhost:3000/invoice/?items=${encodeURIComponent(items)}&prices=${encodeURIComponent(prices)}&counts=${encodeURIComponent(counts)}&paymenttoken{}`;\n    return url;\n  }\n  \n\n  const handlePayment = async () => {\n    if (paymentMethod === 'ledgerpay') {\n      try {\n        const response = await axios.post('http://localhost:5000/api/create-invoice', {\n          amount: cart.reduce((total, product) => total + product.price, 0),  // Total price of the cart\n          currency: 'USD',\n        });\n        setPaymentLink(response.data.paymentLink);\n      } catch (error) {\n        console.error('Error creating invoice with LedgerPay:', error);\n      }\n    }\n  };\n\n  function goToInvoice(){\n    \n\n\n  }\n\n  return (\n    <div>\n      <h1>Checkout</h1>\n\n      <h2>Your Cart</h2>\n      <ul>\n        {cart.map((product, index) => (\n          <li key={index}>\n            {product.name} - ${product.price}\n          </li>\n        ))}\n      </ul>\n      <h3>Total: ${cart.reduce((total, product) => total + product.price, 0)}</h3>\n\n      <div>\n        <button onClick={() => window.location.href = getInvoiceUrl()}>Pay with LedgerPay</button>\n        <button onClick={() => setPaymentMethod('paypal')}>Pay with PayPal</button>\n      </div>\n\n      {paymentMethod === 'ledgerpay' && (\n        <div>\n          <button onClick={handlePayment}>Generate LedgerPay Invoice</button>\n        </div>\n      )}\n\n      {paymentLink && (\n        <div>\n          <h3>Payment Link</h3>\n          <a href={paymentLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            Click to Pay with LedgerPay\n          </a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}